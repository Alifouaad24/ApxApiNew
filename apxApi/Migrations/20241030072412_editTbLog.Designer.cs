// <auto-generated />
using System;
using AinAlfahd.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace apxApi.Migrations
{
    [DbContext(typeof(MasterDBContext))]
    [Migration("20241030072412_editTbLog")]
    partial class editTbLog
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Arabic_CI_AS")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AinAlfahd.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("accountName");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int")
                        .HasColumnName("isActive");

                    b.HasKey("Id");

                    b.ToTable("accounts", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.AccountBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<int?>("BatchId")
                        .HasColumnType("int")
                        .HasColumnName("batchID");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("isDeleted");

                    b.Property<int?>("NotCollected")
                        .HasColumnType("int")
                        .HasColumnName("not_collected");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("notes");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int")
                        .HasColumnName("order_no");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("SpentCategory")
                        .HasColumnType("int")
                        .HasColumnName("spent_category");

                    b.Property<DateOnly?>("TransactionDate")
                        .HasColumnType("date")
                        .HasColumnName("transaction_date");

                    b.Property<int?>("TransactionType")
                        .HasColumnType("int")
                        .HasColumnName("transaction_type");

                    b.HasKey("Id");

                    b.ToTable("AccountBox", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("activityID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<string>("ActivityName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("activityName");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.HasKey("ActivityId")
                        .HasName("PK_test_activities");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("AinAlfahd.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Area")
                        .HasColumnType("int");

                    b.Property<int>("City")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LandMark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("AinAlfahd.Models.Aliexbatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BatchStatus")
                        .HasColumnType("int")
                        .HasColumnName("batch_status");

                    b.Property<DateTime?>("InsertDt")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("insert_dt");

                    b.Property<int?>("MerchantId")
                        .HasColumnType("int")
                        .HasColumnName("merchant_id");

                    b.HasKey("Id");

                    b.ToTable("aliexbatch", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("city_id");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.Property<int?>("Sector")
                        .HasColumnType("int")
                        .HasColumnName("sector");

                    b.Property<int?>("Spec")
                        .HasColumnType("int")
                        .HasColumnName("spec");

                    b.Property<int?>("Zone")
                        .HasColumnType("int")
                        .HasColumnName("zone");

                    b.HasKey("Id");

                    b.ToTable("areas", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.Batch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Adjusted")
                        .HasColumnType("int")
                        .HasColumnName("adjusted");

                    b.Property<string>("BatchName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("BatchShippingDate")
                        .HasColumnType("date");

                    b.Property<int?>("BatchStatus")
                        .HasColumnType("int")
                        .HasColumnName("batch_status");

                    b.Property<int?>("BatchUsvalue")
                        .HasColumnType("int")
                        .HasColumnName("batchUSValue");

                    b.Property<int?>("Cbm")
                        .HasColumnType("int")
                        .HasColumnName("CBM");

                    b.Property<string>("CityId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("city_id")
                        .IsFixedLength();

                    b.Property<DateOnly?>("FinanceDt")
                        .HasColumnType("date")
                        .HasColumnName("finance_dt");

                    b.Property<int?>("Financed")
                        .HasColumnType("int")
                        .HasColumnName("financed");

                    b.Property<DateOnly?>("InsertDt")
                        .HasColumnType("date")
                        .HasColumnName("insert_dt");

                    b.Property<int?>("MerchantId")
                        .HasColumnType("int")
                        .HasColumnName("merchant_id");

                    b.Property<int?>("ShippingCompanyId")
                        .HasColumnType("int")
                        .HasColumnName("ShippingCompanyID");

                    b.HasKey("Id");

                    b.ToTable("Batches");
                });

            modelBuilder.Entity("AinAlfahd.Models.BatchStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("batch_status", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.Business", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int")
                        .HasColumnName("activity_id");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Address2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address2");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Business_name");

                    b.Property<string>("BusinessPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("business_phone");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("city");

                    b.Property<int?>("CustId")
                        .HasColumnType("int")
                        .HasColumnName("cust_id");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int")
                        .HasColumnName("state_code");

                    b.Property<int?>("Zip")
                        .HasColumnType("int")
                        .HasColumnName("zip");

                    b.HasKey("Id");

                    b.ToTable("business", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.BusinessArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BusinessId")
                        .HasColumnType("int")
                        .HasColumnName("business_id");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("city_id");

                    b.HasKey("Id");

                    b.ToTable("business_areas", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId")
                        .HasName("PK_test_categories");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("AinAlfahd.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.Property<int?>("IsNorth")
                        .HasColumnType("int")
                        .HasColumnName("isNorth");

                    b.HasKey("Id");

                    b.ToTable("cities", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustArea")
                        .HasColumnType("int")
                        .HasColumnName("cust_area");

                    b.Property<int?>("CustCity")
                        .HasColumnType("int")
                        .HasColumnName("cust_city");

                    b.Property<string>("CustLandmark")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("cust_landmark");

                    b.Property<string>("CustMob")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("cust_mob");

                    b.Property<string>("CustMob2")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("cust_mob2");

                    b.Property<string>("CustName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("cust_name");

                    b.Property<string>("CustProfile")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("cust_profile");

                    b.Property<int?>("CustStatus")
                        .HasColumnType("int")
                        .HasColumnName("cust_status");

                    b.Property<string>("Fbid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fbid");

                    b.Property<int?>("FullPackage")
                        .HasColumnType("int")
                        .HasColumnName("full_package");

                    b.Property<string>("Gisurl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gisurl");

                    b.Property<string>("Hexcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("hexcode");

                    b.Property<DateOnly?>("InsertDt")
                        .HasColumnType("date")
                        .HasColumnName("insert_dt");

                    b.Property<string>("Lat")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("lat");

                    b.Property<float?>("Lon")
                        .HasColumnType("real")
                        .HasColumnName("lon");

                    b.HasKey("Id");

                    b.HasIndex("CustMob")
                        .IsUnique()
                        .HasFilter("[cust_mob] IS NOT NULL");

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.CustomerService", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId", "ServiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("CustomerServices");
                });

            modelBuilder.Entity("AinAlfahd.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Doctor", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.ErrorLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripton")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripton");

                    b.Property<DateOnly?>("InsertDate")
                        .HasColumnType("date")
                        .HasColumnName("insert_date");

                    b.Property<string>("Sqlqry")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sqlqry");

                    b.HasKey("Id");

                    b.ToTable("error_log", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.Exchange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BankRate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bank_rate");

                    b.Property<string>("ExchangeRate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("exchange_rate");

                    b.Property<string>("Managerno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("managerno");

                    b.Property<string>("OldRate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("old_rate");

                    b.HasKey("Id");

                    b.ToTable("exchange", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.IncomeBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<int?>("Cleared")
                        .HasColumnType("int")
                        .HasColumnName("cleared");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.Property<DateOnly?>("InsertDt")
                        .HasColumnType("date")
                        .HasColumnName("insert_dt");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("isDeleted");

                    b.Property<int?>("MerchantId")
                        .HasColumnType("int")
                        .HasColumnName("merchant_id");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int")
                        .HasColumnName("order_no");

                    b.Property<int?>("TransactionType")
                        .HasColumnType("int")
                        .HasColumnName("transaction_type");

                    b.HasKey("Id");

                    b.ToTable("income_box", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArDesc")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("AR_DESC");

                    b.Property<int?>("Assymbly")
                        .HasColumnType("int")
                        .HasColumnName("assymbly");

                    b.Property<int?>("Comb")
                        .HasColumnType("int")
                        .HasColumnName("comb");

                    b.Property<int?>("Cost")
                        .HasColumnType("int")
                        .HasColumnName("cost");

                    b.Property<string>("EngName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("eng_name");

                    b.Property<string>("Fr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FR");

                    b.Property<int?>("H")
                        .HasColumnType("int")
                        .HasColumnName("h");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("img_url");

                    b.Property<int?>("L")
                        .HasColumnType("int")
                        .HasColumnName("l");

                    b.Property<string>("PCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("p_code");

                    b.Property<decimal?>("SitePrice")
                        .HasColumnType("money")
                        .HasColumnName("site_price");

                    b.Property<int?>("SubId")
                        .HasColumnType("int")
                        .HasColumnName("sub_id");

                    b.Property<int?>("W")
                        .HasColumnType("int")
                        .HasColumnName("w");

                    b.Property<string>("WebUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("web_url");

                    b.Property<int?>("Weight")
                        .HasColumnType("int")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.ToTable("items", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.ItemStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("item_status", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.ListPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("LabId")
                        .HasColumnType("int")
                        .HasColumnName("lab_id");

                    b.Property<int?>("Pricing")
                        .HasColumnType("int")
                        .HasColumnName("pricing");

                    b.Property<int?>("SampleId")
                        .HasColumnType("int")
                        .HasColumnName("sample_id");

                    b.HasKey("Id");

                    b.ToTable("list_price", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.Merchant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Bgw")
                        .HasColumnType("int")
                        .HasColumnName("bgw");

                    b.Property<int?>("Branch")
                        .HasColumnType("int")
                        .HasColumnName("branch");

                    b.Property<int?>("Bypass")
                        .HasColumnType("int")
                        .HasColumnName("bypass");

                    b.Property<int?>("Cities")
                        .HasColumnType("int")
                        .HasColumnName("cities");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("city_id");

                    b.Property<int?>("Credit")
                        .HasColumnType("int")
                        .HasColumnName("credit");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<int?>("Hidden")
                        .HasColumnType("int")
                        .HasColumnName("hidden");

                    b.Property<int?>("IsPublic")
                        .HasColumnType("int")
                        .HasColumnName("isPublic");

                    b.Property<string>("MerchantMob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("merchant_mob");

                    b.Property<string>("MerchantName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Merchant_name");

                    b.Property<decimal?>("Outskirts")
                        .HasColumnType("money")
                        .HasColumnName("outskirts");

                    b.Property<int?>("SmsAlert")
                        .HasColumnType("int")
                        .HasColumnName("sms_alert");

                    b.Property<int?>("Sorting")
                        .HasColumnType("int")
                        .HasColumnName("sorting");

                    b.Property<int?>("UsDelivery")
                        .HasColumnType("int")
                        .HasColumnName("US_delivery");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK_patient");

                    b.ToTable("Merchants");
                });

            modelBuilder.Entity("AinAlfahd.Models.NeighberLab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("LabId")
                        .HasColumnType("int")
                        .HasColumnName("labID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("neighberLabs", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.Offlinetran", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SqlQry")
                        .HasMaxLength(900)
                        .HasColumnType("nvarchar(900)")
                        .HasColumnName("sql_qry");

                    b.Property<DateOnly?>("TranDate")
                        .HasColumnType("date")
                        .HasColumnName("tran_date");

                    b.Property<DateOnly?>("TransferDate")
                        .HasColumnType("date")
                        .HasColumnName("transfer_date");

                    b.HasKey("Id");

                    b.ToTable("offlinetrans", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Acknoledged")
                        .HasColumnType("int")
                        .HasColumnName("acknoledged");

                    b.Property<DateTime?>("ActualDeliveryDt")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("actual_delivery_dt");

                    b.Property<int?>("AdminAdj")
                        .HasColumnType("int")
                        .HasColumnName("admin_adj");

                    b.Property<int?>("AdminBonus")
                        .HasColumnType("int")
                        .HasColumnName("admin_bonus");

                    b.Property<int?>("AdvOrder")
                        .HasColumnType("int")
                        .HasColumnName("adv_order");

                    b.Property<int?>("AdvancePayment")
                        .HasColumnType("int")
                        .HasColumnName("advance_payment");

                    b.Property<int?>("AgentUserId")
                        .HasColumnType("int")
                        .HasColumnName("agent_user_id");

                    b.Property<int?>("Aliexbatchid")
                        .HasColumnType("int")
                        .HasColumnName("aliexbatchid");

                    b.Property<int?>("AssymblyCharges")
                        .HasColumnType("int")
                        .HasColumnName("assymbly_charges");

                    b.Property<int?>("AssymblyCleared")
                        .HasColumnType("int")
                        .HasColumnName("assymblyCleared");

                    b.Property<int?>("AssymblyCollectedBy")
                        .HasColumnType("int")
                        .HasColumnName("assymbly_collected_by");

                    b.Property<int?>("BatchId")
                        .HasColumnType("int")
                        .HasColumnName("BatchID");

                    b.Property<int?>("BonusDeduct")
                        .HasColumnType("int")
                        .HasColumnName("bonus_deduct");

                    b.Property<int?>("BonusIq")
                        .HasColumnType("int")
                        .HasColumnName("bonusIQ");

                    b.Property<DateTime?>("BookingDt")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("booking_dt");

                    b.Property<decimal?>("BookingSource")
                        .HasColumnType("money")
                        .HasColumnName("booking_source");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<int?>("CenrtralBankPrice")
                        .HasColumnType("int")
                        .HasColumnName("cenrtral_bank_price");

                    b.Property<int?>("CityReceipt")
                        .HasColumnType("int")
                        .HasColumnName("city_receipt");

                    b.Property<DateTime?>("CloseAcknoledgeDt")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("close_acknoledge_dt");

                    b.Property<int?>("Closed")
                        .HasColumnType("int")
                        .HasColumnName("closed");

                    b.Property<int?>("Collected")
                        .HasColumnType("int")
                        .HasColumnName("collected");

                    b.Property<int?>("CollectedByOwner")
                        .HasColumnType("int")
                        .HasColumnName("collected_by_owner");

                    b.Property<DateOnly?>("CollectionAdjustmentDt")
                        .HasColumnType("date")
                        .HasColumnName("collection_adjustment_dt");

                    b.Property<DateTime?>("CollectionDt")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("collection_dt");

                    b.Property<int?>("CompDeliveryAdj")
                        .HasColumnType("int")
                        .HasColumnName("comp_delivery_adj");

                    b.Property<int?>("CompSortAdj")
                        .HasColumnType("int")
                        .HasColumnName("comp_sort_adj");

                    b.Property<int?>("DeductProgressed")
                        .HasColumnType("int")
                        .HasColumnName("deduct_progressed");

                    b.Property<int?>("DeliveryCharges")
                        .HasColumnType("int")
                        .HasColumnName("delivery_charges");

                    b.Property<int?>("DeliveryCleared")
                        .HasColumnType("int")
                        .HasColumnName("deliveryCleared");

                    b.Property<int?>("DeliveryCollectedBy")
                        .HasColumnType("int")
                        .HasColumnName("deliveryCollectedBy");

                    b.Property<DateTime?>("DeliveryDt")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("delivery_dt");

                    b.Property<string>("DeliveryNotes")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("delivery_notes");

                    b.Property<int?>("FinancAdj")
                        .HasColumnType("int")
                        .HasColumnName("financ_adj");

                    b.Property<int?>("FinanceStatus")
                        .HasColumnType("int")
                        .HasColumnName("finance_status");

                    b.Property<int?>("FullyPackage")
                        .HasColumnType("int")
                        .HasColumnName("fully_package");

                    b.Property<string>("Hxcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("hxcode");

                    b.Property<int?>("IsCredit")
                        .HasColumnType("int")
                        .HasColumnName("is_credit");

                    b.Property<int?>("LastBeforeStatusId")
                        .HasColumnType("int")
                        .HasColumnName("last_before_status_id");

                    b.Property<int?>("LinkedAdvNorderNo")
                        .HasColumnType("int")
                        .HasColumnName("linked_adv_norder_no");

                    b.Property<int?>("LocalDeliveryAdj")
                        .HasColumnType("int")
                        .HasColumnName("local_delivery_adj");

                    b.Property<int?>("MerchantId")
                        .HasColumnType("int")
                        .HasColumnName("merchant_id");

                    b.Property<int?>("NetAmount")
                        .HasColumnType("int");

                    b.Property<int?>("Netrevenue")
                        .HasColumnType("int")
                        .HasColumnName("netrevenue");

                    b.Property<string>("Notes")
                        .HasMaxLength(650)
                        .HasColumnType("nvarchar(650)")
                        .HasColumnName("notes");

                    b.Property<int?>("OnlineOrder")
                        .HasColumnType("int")
                        .HasColumnName("online_order");

                    b.Property<int?>("OrderCaseId")
                        .HasColumnType("int")
                        .HasColumnName("order_case_id");

                    b.Property<DateOnly?>("OrderDt")
                        .HasColumnType("date")
                        .HasColumnName("order_dt");

                    b.Property<int?>("OrderOwner")
                        .HasColumnType("int")
                        .HasColumnName("order_owner");

                    b.Property<int?>("OrderStatus")
                        .HasColumnType("int")
                        .HasColumnName("order_status");

                    b.Property<int?>("PageReturnArrange")
                        .HasColumnType("int")
                        .HasColumnName("page_return_arrange");

                    b.Property<DateTime?>("PickupDt")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("pickup_dt");

                    b.Property<int?>("PreClose")
                        .HasColumnType("int")
                        .HasColumnName("pre_close");

                    b.Property<string>("PriceLog")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("price_log");

                    b.Property<DateOnly?>("ReceiptDt")
                        .HasColumnType("date")
                        .HasColumnName("receipt_dt");

                    b.Property<string>("ReceiptNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("receipt_no");

                    b.Property<DateOnly?>("ReturnDt")
                        .HasColumnType("date")
                        .HasColumnName("return_dt");

                    b.Property<int?>("Returned")
                        .HasColumnType("int")
                        .HasColumnName("returned");

                    b.Property<int?>("ServiceCharges")
                        .HasColumnType("int")
                        .HasColumnName("service_charges");

                    b.Property<DateTime?>("SmsnotificationDt")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("smsnotification_dt");

                    b.Property<int?>("SortFeesAdj")
                        .HasColumnType("int")
                        .HasColumnName("sort_fees_adj");

                    b.Property<int?>("Source")
                        .HasColumnType("int")
                        .HasColumnName("source");

                    b.Property<int?>("TaskStatusId")
                        .HasColumnType("int")
                        .HasColumnName("task_status_id");

                    b.Property<int?>("TaskWithAgentId")
                        .HasColumnType("int")
                        .HasColumnName("task_with_agent_id");

                    b.Property<int?>("ToWarehouse")
                        .HasColumnType("int")
                        .HasColumnName("to_warehouse");

                    b.Property<int?>("Totalqty")
                        .HasColumnType("int")
                        .HasColumnName("totalqty");

                    b.Property<int?>("Transferred")
                        .HasColumnType("int")
                        .HasColumnName("transferred");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int?>("WithAgent")
                        .HasColumnType("int")
                        .HasColumnName("with_agent");

                    b.Property<int?>("WithAgentId")
                        .HasColumnType("int")
                        .HasColumnName("with_agent_id");

                    b.Property<int?>("WithDelivery")
                        .HasColumnType("int")
                        .HasColumnName("with_delivery");

                    b.HasKey("Id");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.OrderCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("order_cases", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Adjusted")
                        .HasColumnType("int")
                        .HasColumnName("adjusted");

                    b.Property<int?>("BonusUs")
                        .HasColumnType("int")
                        .HasColumnName("bonusUS");

                    b.Property<DateTime?>("BookingDt")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("booking_dt");

                    b.Property<int?>("CollectionFeesIq")
                        .HasColumnType("int")
                        .HasColumnName("collection_feesIQ");

                    b.Property<int?>("DeliveryFeesIq")
                        .HasColumnType("int")
                        .HasColumnName("Delivery_feesIQ");

                    b.Property<int?>("FinanceStatus")
                        .HasColumnType("int")
                        .HasColumnName("finance_status");

                    b.Property<DateTime?>("InsertDt")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("insert_dt");

                    b.Property<int?>("ItemCode")
                        .HasColumnType("int")
                        .HasColumnName("item_code");

                    b.Property<int?>("Missing")
                        .HasColumnType("int")
                        .HasColumnName("missing");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("notes");

                    b.Property<int?>("OnlineOrder")
                        .HasColumnType("int")
                        .HasColumnName("online_order");

                    b.Property<string>("OrderId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("OrderID");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int")
                        .HasColumnName("order_no");

                    b.Property<int?>("OriginalAmount")
                        .HasColumnType("int")
                        .HasColumnName("original_amount");

                    b.Property<int?>("PageReturn")
                        .HasColumnType("int")
                        .HasColumnName("page_return");

                    b.Property<int?>("Preorder")
                        .HasColumnType("int")
                        .HasColumnName("preorder");

                    b.Property<int?>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("qty");

                    b.Property<int?>("Removed")
                        .HasColumnType("int")
                        .HasColumnName("removed");

                    b.Property<int?>("RestPaid")
                        .HasColumnType("int");

                    b.Property<int?>("RestPaidCleared")
                        .HasColumnType("int");

                    b.Property<int?>("RestPaidCollectedBy")
                        .HasColumnType("int");

                    b.Property<int?>("Returned")
                        .HasColumnType("int")
                        .HasColumnName("returned");

                    b.Property<int?>("Size")
                        .HasColumnType("int")
                        .HasColumnName("size");

                    b.Property<int?>("Sorted")
                        .HasColumnType("int")
                        .HasColumnName("sorted");

                    b.Property<int?>("SourcePrice")
                        .HasColumnType("int")
                        .HasColumnName("source_price");

                    b.Property<int?>("TaskStatusId")
                        .HasColumnType("int")
                        .HasColumnName("task_status_id");

                    b.Property<int?>("TempMissing")
                        .HasColumnType("int")
                        .HasColumnName("temp_missing");

                    b.Property<string>("TrackingNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tracking_no");

                    b.Property<int?>("Value")
                        .HasColumnType("int")
                        .HasColumnName("value");

                    b.Property<int?>("ValueCleared")
                        .HasColumnType("int")
                        .HasColumnName("valueCleared");

                    b.Property<int?>("ValueCollecedBy")
                        .HasColumnType("int")
                        .HasColumnName("valueCollecedBy");

                    b.Property<decimal?>("WebsitePrice")
                        .HasColumnType("money")
                        .HasColumnName("website_price");

                    b.Property<int?>("Whs")
                        .HasColumnType("int")
                        .HasColumnName("whs");

                    b.Property<int?>("WhsBatchId")
                        .HasColumnType("int")
                        .HasColumnName("whs_batch_id");

                    b.Property<int?>("Whsid")
                        .HasColumnType("int")
                        .HasColumnName("whsid");

                    b.HasKey("Id");

                    b.ToTable("order_details", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("description");

                    b.Property<int?>("Role")
                        .HasColumnType("int")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("order_status", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.Preorder", b =>
                {
                    b.Property<int?>("CustId")
                        .HasColumnType("int")
                        .HasColumnName("cust_id");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("InsertDate")
                        .HasColumnType("int")
                        .HasColumnName("insert_date");

                    b.Property<int?>("OrderDate")
                        .HasColumnType("int")
                        .HasColumnName("order_date");

                    b.Property<int?>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("qty");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("Totalamount")
                        .HasColumnType("int")
                        .HasColumnName("totalamount");

                    b.ToTable("preorders", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<string>("ProductName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AinAlfahd.Models.Reciept", b =>
                {
                    b.Property<int>("RecieptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecieptId"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DisCount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FinanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("IsFinanced")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RecieptDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SellingCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SellingDisCount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("RecieptId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Reciepts");
                });

            modelBuilder.Entity("AinAlfahd.Models.RegistrationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<DateOnly?>("InsertDate")
                        .HasColumnType("date")
                        .HasColumnName("insert_date");

                    b.Property<int?>("LabId")
                        .HasColumnType("int")
                        .HasColumnName("lab_id");

                    b.Property<int?>("RegistrationType")
                        .HasColumnType("int")
                        .HasColumnName("registration_type");

                    b.Property<int?>("RepresentitiveId")
                        .HasColumnType("int")
                        .HasColumnName("representitive_id");

                    b.HasKey("Id");

                    b.ToTable("registration_log", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.RolesName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("roleName");

                    b.HasKey("Id");

                    b.ToTable("RolesNames");
                });

            modelBuilder.Entity("AinAlfahd.Models.SampleStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("sample_status", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.SerialNumber", b =>
                {
                    b.Property<int>("Sno")
                        .HasColumnType("int")
                        .HasColumnName("SNo");

                    b.HasKey("Sno")
                        .HasName("PK__SerialNu__CA1EE04C72F5487E");

                    b.ToTable("SerialNumber", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("services", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.ShippingCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ShippingCompanies");
                });

            modelBuilder.Entity("AinAlfahd.Models.Source", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("sources", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.Specialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Specialties");
                });

            modelBuilder.Entity("AinAlfahd.Models.SpendingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int")
                        .HasColumnName("isActive");

                    b.HasKey("Id");

                    b.ToTable("spending_list", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Staetag")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("staetag");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("AinAlfahd.Models.StoreSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ItemCode")
                        .HasColumnType("int")
                        .HasColumnName("item_code");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int")
                        .HasColumnName("size_id");

                    b.HasKey("Id");

                    b.ToTable("store_size", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.TaskStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("task_status", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.TblConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Db_env")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MissingFav")
                        .HasColumnType("int")
                        .HasColumnName("missing_fav");

                    b.HasKey("Id");

                    b.ToTable("tbl_config", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 5,
                            Db_env = "Dev"
                        });
                });

            modelBuilder.Entity("AinAlfahd.Models.TblLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("InputParamiter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("OutputParamiter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pvalue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pvalue");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_log", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.TblSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.Property<int?>("GroupIndex")
                        .HasColumnType("int")
                        .HasColumnName("group_index");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int")
                        .HasColumnName("order_index");

                    b.HasKey("Id");

                    b.ToTable("tbl_size", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.Tbllat", b =>
                {
                    b.Property<string>("Str")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("str");

                    b.ToTable("tbllat", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.Tblsku", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Skuurl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("skuurl");

                    b.HasKey("Id");

                    b.ToTable("tblsku", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.TestDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("TestId")
                        .HasColumnType("int")
                        .HasColumnName("test_id");

                    b.Property<int?>("TestTypeId")
                        .HasColumnType("int")
                        .HasColumnName("test_type_id");

                    b.HasKey("Id");

                    b.ToTable("test_details", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.TransactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("transaction_types", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.UsCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustCityId")
                        .HasColumnType("int")
                        .HasColumnName("cust_city_id");

                    b.Property<string>("CustName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cust_name");

                    b.Property<string>("CustPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cust_phone");

                    b.Property<string>("CustPwd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cust_pwd");

                    b.Property<int?>("CustStateId")
                        .HasColumnType("int")
                        .HasColumnName("cust_state_id");

                    b.HasKey("Id");

                    b.ToTable("usCustomer", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.UsCustomerReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BusinessId")
                        .HasColumnType("int")
                        .HasColumnName("business_id");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<int?>("ReviewScore")
                        .HasColumnType("int")
                        .HasColumnName("review_score");

                    b.HasKey("Id");

                    b.ToTable("usCustomer_review", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.Uscity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.Property<int?>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("StateID");

                    b.HasKey("Id");

                    b.ToTable("UScities", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("area_id");

                    b.Property<int?>("BasicSalary")
                        .HasColumnType("int")
                        .HasColumnName("basic_salary");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("city_id");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<DateOnly?>("EmploymentDate")
                        .HasColumnType("date")
                        .HasColumnName("employment_date");

                    b.Property<int?>("FullPackage")
                        .HasColumnType("int")
                        .HasColumnName("full_package");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int")
                        .HasColumnName("gender_id");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int")
                        .HasColumnName("is_active");

                    b.Property<int?>("LabId")
                        .HasColumnType("int")
                        .HasColumnName("lab_id");

                    b.Property<DateOnly?>("LastLogin")
                        .HasColumnType("date")
                        .HasColumnName("last_login");

                    b.Property<string>("Loginid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("loginid");

                    b.Property<int?>("MerchantId")
                        .HasColumnType("int")
                        .HasColumnName("merchant_id");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phone");

                    b.Property<int?>("Role")
                        .HasColumnType("int")
                        .HasColumnName("role");

                    b.Property<int?>("Transportation")
                        .HasColumnType("int")
                        .HasColumnName("transportation");

                    b.Property<int?>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.Property<string>("Userpwd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("userpwd");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.UserMerchant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MerchantId")
                        .HasColumnType("int")
                        .HasColumnName("merchant_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK_tracking");

                    b.ToTable("user_merchant", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.VwMostwanted", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("img_url");

                    b.Property<string>("PCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("p_code");

                    b.Property<decimal?>("SitePrice")
                        .HasColumnType("money")
                        .HasColumnName("site_price");

                    b.Property<int?>("Totalorders")
                        .HasColumnType("int")
                        .HasColumnName("totalorders");

                    b.ToTable((string)null);

                    b.ToView("vw_mostwanted", (string)null);
                });

            modelBuilder.Entity("AinAlfahd.Models.Address", b =>
                {
                    b.HasOne("AinAlfahd.Models.Customer", "Customers")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("AinAlfahd.Models.CustomerService", b =>
                {
                    b.HasOne("AinAlfahd.Models.Customer", "Customer")
                        .WithMany("CustomerServices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AinAlfahd.Models.Service", "Service")
                        .WithMany("CustomerServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("AinAlfahd.Models.Reciept", b =>
                {
                    b.HasOne("AinAlfahd.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("AinAlfahd.Models.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("CustomerServices");
                });

            modelBuilder.Entity("AinAlfahd.Models.Service", b =>
                {
                    b.Navigation("CustomerServices");
                });
#pragma warning restore 612, 618
        }
    }
}
